{
  "address": "0.0.0.0",
  "port": 8081,
  "threads": 8,
  "_private-key-file": "mtls/server.key",
  "_cert-file": "mtls/server.crt",
  "_caCert-file": "mtls/ca.crt",
  "mTLS": false,
  "verbose": false,
  "Service": [
    {
      "Request": {
        "name": "subscribe",
        "headers": [
          {
            "header-name": ":path",
            "matchType": "RegexMatch",
            "input": "\\/udm-ee\\/subscribe\\/.*"
          },
          {
            "header-name": ":method",
            "matchType": "EqualsTo",
            "input": "POST"
          }
        ],
        "payload": []
      },
      "Responses": [
        {
          "name": "resp-201",
          "weight": 100,
          "throttle-ratio": 0,
          "status-code": 201,
          "payload": {
            "msg-payload": "{   \"schema\": \"http\",   \"host\": \"192.168.1.107\",   \"port\": 8080 }",
            "placeholder": "",
            "arguments": []
          },
          "additonalHeaders": [
            {
              "header": "location:/udm-ee/subscription/%s",
              "placeholder": "%s",
              "arguments": [
                {
                  "type-of-value": "RandomHex",
                  "value-identifier": "",
                  "regex": "",
                  "sub-string-start": 0,
                  "sub-string-length": -1
                }
              ]
            },
            {
              "header": "received-path:%s",
              "placeholder": "%s",
              "arguments": [
                {
                  "type-of-value": "Header",
                  "value-identifier": ":path",
                  "regex": "\\/udm-ee\\/subscribe\\/.*",
                  "sub-string-start": 0,
                  "sub-string-length": -1
                }
              ]
            }
          ],
	  "lua-offload": true,
          "luaScript": "function customize_response(request_header, request_payload, response_headers_to_send, response_payload_to_send)     response_headers_to_send[\"old-status\"] = response_headers_to_send[\":status\"]     response_headers_to_send[\":status\"] = \"201\"     return response_headers_to_send, response_payload_to_send end"
        },
        {
          "name": "503",
          "weight": 0,
          "throttle-ratio": 0,
          "status-code": 503,
          "payload": {
            "msg-payload": "",
            "placeholder": "",
            "arguments": []
          },
          "additonalHeaders": [],
          "luaScript": "",
          "lua-offload": true
        }
      ]
    },
    {
      "Request": {
        "name": "subs-update",
        "headers": [
          {
            "header-name": ":path",
            "matchType": "StartsWith",
            "input": "/udm-ee/subscription/"
          },
          {
            "header-name": ":method",
            "matchType": "EqualsTo",
            "input": "PATCH"
          }
        ],
        "payload": []
      },
      "Responses": [
        {
          "name": "resp-204",
          "weight": 100,
          "throttle-ratio": 0,
          "status-code": 204,
          "payload": {
            "msg-payload": "",
            "placeholder": "",
            "arguments": []
          },
          "additonalHeaders": [],
          "luaScript": "",
          "lua-offload": false
        }
      ]
    },
    {
      "Request": {
        "name": "subs-del",
        "headers": [
          {
            "header-name": ":path",
            "matchType": "StartsWith",
            "input": "/udm-ee/subscription/"
          },
          {
            "header-name": ":method",
            "matchType": "EqualsTo",
            "input": "DELETE"
          }
        ],
        "payload": []
      },
      "Responses": [
        {
          "name": "del-204",
          "weight": 100,
          "throttle-ratio": 0,
          "status-code": 204,
          "payload": {
            "msg-payload": "",
            "placeholder": "",
            "arguments": []
          },
          "additonalHeaders": [],
          "luaScript": "",
          "lua-offload": false
        }
      ]
    },
    {
      "Request": {
        "name": "amf-reg",
        "headers": [
          {
            "header-name": ":path",
            "matchType": "StartsWith",
            "input": "/3gpp-amf-registration"
          },
          {
            "header-name": ":method",
            "matchType": "EqualsTo",
            "input": "POST"
          }
        ],
        "payload": []
      },
      "Responses": [
        {
          "name": "reg-204",
          "weight": 100,
          "throttle-ratio": 0,
          "status-code": 204,
          "payload": {
            "msg-payload": "",
            "placeholder": "",
            "arguments": []
          },
          "additonalHeaders": [],
          "luaScript": "function customize_response(request_header, request_payload, response_headers_to_send, response_payload_to_send)     response_headers_to_send[\"old-status\"] = response_headers_to_send[\":status\"]     response_headers_to_send[\":status\"] = \"204\"     return response_headers_to_send, response_payload_to_send end",
          "lua-offload": true
        }
      ]
    },
    {
      "Request": {
        "name": "amf-dereg",
        "headers": [
          {
            "header-name": ":path",
            "matchType": "StartsWith",
            "input": "/3gpp-amf-registration"
          },
          {
            "header-name": ":method",
            "matchType": "EqualsTo",
            "input": "PATCH"
          }
        ],
        "payload": []
      },
      "Responses": [
        {
          "name": "dereg-204",
          "weight": 100,
          "throttle-ratio": 0,
          "status-code": 204,
          "payload": {
            "msg-payload": "",
            "placeholder": "",
            "arguments": []
          },
          "additonalHeaders": [],
          "luaScript": "function customize_response(response_header, response_payload, request_headers_to_send, request_payload_to_send)     request_headers_to_send[\"lua-version\"] = \"5.1\"     return request_headers_to_send, request_payload_to_send end",
          "lua-offload": true
        }
      ]
    }
  ]
}
